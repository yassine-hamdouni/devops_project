pipeline {
    agent any
    tools {
        jdk "JAVA_HOME"
        maven "MAVEN_HOME"
    }
    environment {
        DOCKER_IMAGE_NAME = 'yassine222/devops_project'
        DOCKER_HUB_USERNAME = 'yassine222'
        DOCKER_HUB_PASSWORD = 'dckr_pat_dqWzF3GbS6P8dXHcdr7Tt9NE4ho'
        NEXUS_SNAPSHOT_URL = 'http://localhost:8081/repository/maven-snapshots/'
        NEXUS_RELEASE_URL = 'http://localhost:8081/repository/maven-releases/'
        GROUP_ID = 'tn.esprit'
        ARTIFACT_ID = 'DevOps_Project'
    }
    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/yassine-hamdouni/devops_project'
            }
        }

        stage('Code Compile') {
            steps {
                dir('campers-backend-main') {
                    sh 'mvn clean compile'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                dir('campers-backend-main') {
                    script {
                        withSonarQubeEnv() {
                            sh "mvn clean verify sonar:sonar -Dsonar.projectKey=camers-backend -Dsonar.projectName='camers-backend'"
                        }
                    }
                }
            }
        }

        // Décommente les étapes suivantes si nécessaire
       
        stage('Unit Test') {
            steps {
                dir('campers-backend-main') {
                    sh "mvn test"
                }
            }
        }

        stage('Deploy to Maven Repository') {
            steps {
                dir('campers-backend-main') {
                    script {
                        env.POM_VERSION = sh(script: "mvn help:evaluate -Dexpression=project.version -q -DforceStdout", returnStdout: true).trim()
                        echo "POM Version: ${env.POM_VERSION}"
                        if (env.POM_VERSION.endsWith('-SNAPSHOT')) {
                            sh 'mvn clean deploy -DskipTests -P nexus-deploy-snapshots -s settings.xml'
                        } else {
                            sh 'mvn clean deploy -DskipTests -P nexus-deploy-releases -s settings.xml'
                        }
                    }
                }
            }
        }
        
        stage('Build and Push Image') {
            steps {
                dir('campers-backend-main') {
                    script {
                        sh """
                            docker build -t "${env.DOCKER_IMAGE_NAME}:${env.POM_VERSION}" .
                            docker tag "${env.DOCKER_IMAGE_NAME}:${env.POM_VERSION}" "${env.DOCKER_IMAGE_NAME}:latest"
                            docker login -u "${env.DOCKER_HUB_USERNAME}" -p "${env.DOCKER_HUB_PASSWORD}"
                            docker push "${env.DOCKER_IMAGE_NAME}:${env.POM_VERSION}"
                            docker push "${env.DOCKER_IMAGE_NAME}:latest"
                        """
                    }
                }
            }
        }
        
    }
}
